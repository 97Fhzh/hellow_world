分布式TensorFlow中ps、worker、in-graph、between-graph、synchronous training和asynchronous training的概念
在大数据和分布式的场景下一般使用异步训练
通过Google Cloud ML服务，我们可以把TensorFlow应用代码直接提交到云端运行，甚至可以把训练好的模型直接部署在云上，通过API就可以直接访问

1. 准备训练数据
2. 接受命令行参数
3. 定义神经网络模型
4. 使用不同的优化算法
5. Online learning与Continuous learning
6. 使用TensorBoard优化参数
7. 分布式TensorFlow应用
8. Cloud Machine Learning

TF的四大核心概念：计算图，操作，变量，会话。
 计算图：又被称为有向图和数据流图。节点用来表示施加的数学操作，数据输入的起点/输出的终点，读取/写入持久变量的终点。线表示节点之间的输入/输出关系。
 张量就是大小可以动态调整的多维数据数组。
 
 前向预测建模 ---> 损失部分建模 ---> 训练过程建模
 
 运算操作
一个运算操作代表了一种类型的抽象运算，比如矩阵乘法或者向量加法。
一个运算符可以有自己的属性，但是所有的属性都必须被提前设置。
通过设置运算操作的属性可以用来支持不同的tensor元素类型。
运算核是一个运算操作在某个具体的硬件的实现。
可以通过注册机制加入新的运算操作符或者为已有的运算操作添加新的计算核。
标量运算，向量运算，矩阵运算，带状态的运算，神经网络组件，存储，恢复（tf.train.Saver对象），队列及同步运算，控制流

 准备软件包：（官网或者清华网站可下载）
tensorflow的windows版本，至少要python3.5，下面是python3.5对应的软件包
tensorflow-1.2.1-cp35-cp35m-win_amd64.whl，Anaconda3-4.2.0-Windows-x86_64.exe
基本步骤：anaconda——>依赖库——>tensorflow
1. 安装anaconda软件包，傻瓜式安装就可以了。
2. 配置代理文件，C:\Users\y00166059\.condarc
3. 打开anaconda prompt，依次执行下面命令
conda create --name tf python=3.5  （创建一个名为tf的环境）
activate tf  （激活环境）
conda install jupyter （在tf里安装jupyter notebook）
conda install scipy （在tf里安装数值计算库scipy）
pip install tensorflow-1.2.1-cp35-cp35m-win_amd64.whl 
最后一句pip安装可能出现找不到代理的错误：
3.1 在线安装，配置pip代理的镜像，在C:\Users\y00166059（y00166059替换成自己的工号）下新建pip文件夹，其下新增pip.ini文件（见附件）。
文件内容是公司的pip镜像。
[global]
trusted-host=rnd-mirrors.huawei.com
index-url=http://rnd-mirrors.huawei.com/pypi/simple/
这样会自动下载依赖库，快速搞定。
3.2 离线安装，下载缺少的依赖库，下载方式，如上图，根据提示信息打开网页pypi.python.org/simple/html5lib，下载html5lib-0.9999999这个版本。
因为每次错误提示信息里只显示一个，下载一个更新好后，再执行安装才会提示另一个。并且，不是每一个依赖库都能找到whl包。pypi网站找不到whl包时，可执行conda install XXX，到镜像网站上自动查找。这样还是找不到，就只能使用源码包了，安装方法要注意。
whl包，执行pip install *.whl即可；
源码包，进入源码目录下，执行python setup.py install，必须带python，如果直接执行setup.py install，就会安装到环境外面，云计算上的python2.7目录里了（ci需要，一般都装了这个版本），带python命令字保证安装到当前环境tensorflow的python3.5目录下。
下载好全部依赖库，并成功更新后，如下
4. 如果不使用了，去激活环境deactivate tf，删除“软件安装目录\envs\tf”文件夹。
 
检验：
在anaconda prompt、jupyter或者spyder下，执行下面代码
import tensorflow as tf
hello = tf.constant('Hello, TensorFlow!')
sess = tf.Session()
print(sess.run(hello))
返回结果：
b'Hello, TensorFlow!'

Spark,PMLS,Tensorflow(MXNet)
spark的用户通过建立对有向无环图上RDD的转换或者运行操作来实现计算。
pmls是为机器学期量身打造的平台，通过引入参数服务器抽象概念来处理机器学习训练的频繁迭代。
TF利用有向图的节点和边来实现计算。当你在TF中使用（参数服务器）来实现对模型的训练。

Caffe2的各类模型可以在官网的Model Zoo（https://caffe2.ai/docs/zoo.html） 
Caffe相比于Tensorflow更加专精于计算机视觉（CV），性能更优,如果是做自然语言处理（NLP），Tensorflow更适合.

在Caffe2的github上有一个主题专门讨论了两者的关系（https://github.com/caffe2/caffe2/issues/274）。 
Caffe2可以认为是贾扬清对Caffe的重新思考和重构（http://tutorial.caffe.berkeleyvision.org/caffe-cvpr15-improving.pdf )。 
Caffe2采用了无框架（unframework）的思想，即专注开发核心的部件（例如Gloo, NNPACK, FAISS ）这些部件可以被所有深度学习框架复用，增加了系统的灵活性。

计算机图形显示技术：
Vulkan(支持android原生调用),Nsight


特征向量介绍
我们的特征向量转化，使用了三种方法，也是目前应对字符串比较好的方法选择。
基于word2vec的特征向量
基于词袋的特征向量
基于fofe的特征向量
基于word2vec的特征向量
word2vec可以根据模型把词汇转化成一个多维的特征向量，在构建语句的特征时，我们采用暴力的向量相加的方式。
word2vec在自然语言的实验中，可以很好的表示词语见的关系。具体可以参考维基百科语料中的词语相似度探索
基于词袋的特征向量
词袋向量，我们在天眼实验室的攻击平台上，挑选了在SQL注入中最常出现的250个词汇，构建词袋模型。
词袋模型的参考 BoW（词袋）模型详细介绍http://blog.csdn.net/u010213393/article/details/40987945
基于FOFE的特征向量
FOFE是一种简单精妙的rule-base编码方式。通俗的说就是，在one-hot的基础上利用了数值的大小表明了词的位置信息的一种编码形式。我们基于上面词袋模型的基础，加入了FOFE算法。
FOFE算法的具体论文，来自江辉老师。 
The Fixed-Size Ordinally-Forgetting Encoding Method for Neural Network Language Models
http://blog.csdn.net/u010213393/article/details/40987945

Deeplearning.ai 课程围绕神经网络、反向传播、卷积网络、循环网络展开，包含视频元素和编程练习，将向用户介绍基本的概念，以及如何实施和运用.49美元/月，Coursera,

租房筛选流程：https://yq.aliyun.com/articles/159509
安全牛 站长招聘 简历发至 tianyue@gooann.com
TS安装指南： http://blog.csdn.net/tina_ttl/article/details/51762471 

MXNet
图表达，图分析，内存优化，算子融合（GraphIR）
异构硬件，任务调度，任务依赖，编译优化 （执行引擎）
NDArray (numpy数据结构)张量计算
内存复用
移动端建立的模型越小越好。 
PS-lite：轻量级Parameter Server 迭代性，容错性，参数收敛的非均匀性。 并行提速，参数多。
高效通信：异步通信。弹性扩容：一致性哈希，新server随时插入。容错。易用性：全局共享参数可以表示多种形式。

算子融合，纵向融合（消除）纵向融合（合并） 横向融合
INT8

